@page "/profile/admin/publications"
@using APMLibrary.Web.ViewModels.ComponentsViewModels;
@model APMLibrary.Web.Pages.AdminPages.PublishSettingsModel
@{
    this.ViewData["Title"] = "Просмотр публикаций";
    async Task RenderPageActionLink(string text, bool isDisabled, int page)
    {
        var transferData = new Dictionary<string, string?>()
        {
            { "CurrentPage", page.ToString() },
            { "IsPublished", this.Model.IsPublished?.ToString() },
            { "OrderType", this.Model.OrderType.ToString() },
        };
        <div class="page-item @((isDisabled ? "disabled" : ""))">
            <a class="page-link" asp-page="/AdminPages/PublishSettings" asp-all-route-data="@transferData">@text</a>
        </div>
    }
}
@{
    await this.Html.RenderPartialAsync("SectionsPartial");
    await this.Html.RenderPartialAsync("BreadcrumbPartial", new Dictionary<string, string?>()
    {
        { "Главная", "/Index" }, { "Профиль", "/ProfilePages/ProfileInfo" }, { "Админ", null }, { "Публикации", null }
    });
}
<div class="row w-100 mb-5 justify-content-center g-lg-4">
    <div class="col-12 col-md-4 col-lg-3 mb-4">
        @{
            await this.Html.RenderPartialAsync("AdminNavPartial");
        }
    </div>

    <div class="col-12 col-md-8 col-lg-9 mb-4">
        <div class="bg-white custom-bg-white p-4 mb-4" style="border-radius: 10px;">

            <h1 class="fs-4 fw-bolder mb-4">Список публикаций</h1>
            <div class="text-danger form-text" style="font-size: 16px;" asp-validation-summary="ModelOnly"></div>
            
            <form class="row mb-2" method="get" asp-page="/AdminPages/PublishSettings">
                <div class="col-12 col-md-6 mb-3 mb-md-0">
                    @{
                        var filterList = new List<SelectListItem>()
                        {
                            new SelectListItem("Просмотр всех публикаций", "null"),
                            new SelectListItem("Только не подтвержденные", false.ToString()),
                            new SelectListItem("Только подтвержденные", true.ToString()),
                        };
                    }
                    <select oninput="this.form.submit()" class="form-select" asp-for="IsPublished" asp-items="@filterList"></select>
                </div>
                <div class="col-12 col-md-6">
                    <select oninput="this.form.submit()" class="form-select" asp-for="OrderType"
                        asp-items="@this.Html.GetEnumSelectList<OrderType>()"></select>
                </div>
            </form>

            @if (this.Model.Catalog.Items.Count() <= 0)
            {
                <div class="my-5 p-3">
                    <p class="fs-4 w-100 text-center">Список публикаций пуст</p>
                </div>
            }
            
        </div>
        @foreach (var item in this.Model.Catalog.Items)
        {
            var imageUrl = (item.Image == null ? "/img/nobookcover.png" : $"data:image;base64,{Convert.ToBase64String(item.Image)}");
            var bookUrl = this.Url.Page("/AdminPages/PublicationInfo", new { BookId = item.Id });
            <div class="row mb-4">

                <div class="col-12">
                    <div class="bg-white d-flex flex-row custom-bg-white p-3" style="max-height: 200px;">

                        <a class="text-decoration-none mx-2" href="@bookUrl">
                            <img src="@imageUrl" alt="..." class="card-img-catalog border border-secondary"
                                 style="width: 10rem; border-radius: 10px;" />
                        </a>
                        <div class="mx-2 flex-grow-1 overflow-hidden ">

                            <a href="@bookUrl" class="text-decoration-none text-black fw-bolder mb-3"
                               style="font-size: 16px;"> @item.FirstLine </a>

                            <div class="row">
                                <div class="col-12 col-md-4 col-lg-4 col-xl-3">
                                    <p class="text-primary m-0 overflow-hidden" style="font-size: 14px;"> @item.LastLine </p>
                                </div>
                                <div class="col-12 col-md-4 col-lg-4 col-xl-3">
                                    <span class="text-primary" style="font-size: 14px;">@item.PageCount страниц</span>
                                </div>
                                <div class="col-12 col-md-4 col-lg-4 col-xl-3">
                                    <span class="text-primary m-0 overflow-hidden" style="font-size: 14px;">
                                        Статус: 
                                        <i class="bi fs-5 text-center @(item.Published ? "bi-bookmark-check text-success" : "bi-bookmark-dash text-danger")"></i>
                                    </span>
                                </div>
                            </div>

                            <div class="row mb-2">
                                <div class="col-12 col-md-4 col-lg-4 col-xl-3">
                                    @for (var count = 0; count < 5; count++)
                                    {
                                        <span class="fa fa-star @((item.Rating < count + 1) ? "" : "checked-star")"></span>
                                    }
                                </div>
                                <div class="col-12 col-md-4 col-lg-4 col-xl-3">
                                    <span style="font-size: 14px;">Оценка: @($"{@item.Rating:F2}")</span>
                                </div>
                            </div>
                            <div class="d-none d-md-inline-block" style="max-height:80px; font-size:14px;">
                                <p class="w-100 text-wrap" style="overflow-wrap:anywhere;">@item.Description</p>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        }
        <div class="row mb-4 w-100">
            @{
                var pageCount = Math.Ceiling((double)this.Model.Catalog.AllCount / this.Model.CatalogOptions.MaxItemsOnPage);
            }
            <div class="col-12">
                <div class="pagination">
                    @{
                        await RenderPageActionLink("Назад", this.Model.CurrentPage <= 0, this.Model.CurrentPage - 1);
                    }
                    <div class="d-inline-flex p-0 pb-1" style="overflow-x: auto;">
                        @for (var index = 0; index < pageCount; index++)
                        {
                            await RenderPageActionLink((index + 1).ToString(), this.Model.CurrentPage == index, index);
                        }
                    </div>
                    @{
                        await RenderPageActionLink("Вперед", this.Model.CurrentPage >= pageCount - 1, this.Model.CurrentPage + 1);
                    }
                </div>
            </div>
        </div>
    </div>

</div>

