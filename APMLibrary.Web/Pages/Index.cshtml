@page "/"
@using APMLibrary.Web.ViewComponents;
@model IndexModel
@{
    this.ViewData["Title"] = "Главная";
    const string image = "https://previews.123rf.com/images/popmarleo/popmarleo1807/popmarleo180700042/105673765-books-hand-drawn-fun-colored-background-on-yellow-vector-cartoon.jpg";
    
    var categoryGroups = this.Model.Genres.GroupBy(item => item.Category.Name)
        .Select(item => new
        {
            Category = item.Key,
            Genres = item.Select(p => p.Name).ToList(),
        }).ToList();

    async Task RenderPageActionLink(string text, bool isDisabled, int page)
    {
        var transferData = new Dictionary<string, string?>()
        {
            { "Language", this.Model.FilterModel.Language?.ToString() },
            { "OrderType", this.Model.FilterModel.OrderType.ToString() },
            { "CategoryGenre", this.Model.FilterModel.CategoryGenre?.ToString() },
            { "SearchingText", this.Model.FilterModel.SearchingText?.ToString() },
            { "CurrentPage", page.ToString() },
        };

        <div class="page-item @((isDisabled ? "disabled" : ""))">
            <a class="page-link" asp-page="Index" asp-all-route-data="@transferData">@text</a>
        </div>
    }
    async Task RenderCategoryTreeview()
    {
        <ul class="list-group list-group-flush px-2" style="overflow-y: scroll; height: 160px;">

            @for (var index = 0; index < categoryGroups.Count; index++)
            {
                var item = categoryGroups.ElementAt(index);
                <li class="list-group-item p-0 my-1" style="border-bottom: 1px solid #212529">

                    <button class="btn btn-outline-dark w-100 border-0 border-bottom-1" type="button" data-bs-toggle="collapse"
                            data-bs-target="@($"#collapseGenre{index}")">
                        @item.Category
                    </button>

                    <div class="collapse" id="@($"collapseGenre{index}")">
                        <div class="card card-body m-3 overflow-auto p-1">
                            <ul class="list-group list-group-flush">
                                @foreach (var prop in item.Genres)
                                {
                                    var newCategoryData = new Dictionary<string, string?>()
                                    {
                                        { "Language", this.Model.FilterModel.Language?.ToString() },
                                        { "OrderType", this.Model.FilterModel.OrderType.ToString() },
                                        { "CategoryGenre", prop },
                                        { "SearchingText", this.Model.FilterModel.SearchingText?.ToString() },
                                    };
                                    <li class="list-group-item">
                                        <a class="text-decoration-none" asp-page="/Index" asp-all-route-data="@newCategoryData">@prop</a>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>

                </li>
            }
        </ul>
    }
}
@{
    await this.Html.RenderPartialAsync("SectionsPartial");
}
<div class="row w-100 mb-4" style="background-image: url('@image'); background-repeat: repeat; background-size: 30%;">
    <div style="height: 200px;">
        <h1 class="p-4 text-dark" style="text-shadow: #FFF 1px 0 10px;">Онлайн библиотека </h1>
    </div>
</div>

<div class="row w-100 mb-3">
    <h1 class="fs-2 fw-bolder ">Список публикаций</h1>
    <p class="form-label">@this.Model.Catalog.AllCount изданий найдено</p>
</div>

<div class="row w-100 mb-5 g-lg-4">

    <div class="col-12 col-lg-8 order-1 order-lg-0">

        <div class="row mb-4">
            <div class="col-12">
                <div class="bg-white w-100 custom-bg-white p-3">

                    <h2 class="fs-5 fw-bolder mb-4">Поиск издания по названию</h2>
                    <form class="d-flex flex-row" method="get" asp-page="ListCatalog" asp-page-handler="">

                        <input type="hidden" asp-for="@this.Model.FilterModel.OrderType" />
                        <input type="hidden" asp-for="@this.Model.FilterModel.Language" />
                        <input type="hidden" asp-for="@this.Model.FilterModel.CategoryGenre" />

                        <input asp-for="@this.Model.FilterModel.SearchingText" type="text" class="form-control flex-grow-1 mx-2"
                               placeholder="Введите название издания" maxlength="50" />
                        <input type="submit" class="btn btn-dark mx-2" style="width: 100px;" value="Поиск" />
                    </form>

                </div>
            </div>

        </div>
        @if (this.Model.Catalog.Items.Count() <= 0)
        {
            <div class="my-5 p-3">
                <p class="fs-4 w-100 text-center">Список публикаций пуст</p>
            </div>
        }
        @foreach (var item in this.Model.Catalog.Items)
        {
            var imageUrl = (item.Image == null ? "/img/nobookcover.png" : $"data:image;base64,{Convert.ToBase64String(item.Image)}");
            var bookUrl = this.Url.Page("/LibraryPages/BookInfo", new { BookId = item.Id });
            <div class="row mb-4">

                <div class="col-12">
                    <div class="bg-white d-flex flex-row custom-bg-white p-3" style="max-height: 200px;">

                        <a class="text-decoration-none mx-2" href="@bookUrl">
                            <img src="@imageUrl" alt="..." class="card-img-catalog border border-secondary"
                                 style="width: 10rem; border-radius: 10px;" />
                        </a>
                        <div class="mx-2 flex-grow-1 overflow-hidden ">

                            <a href="@bookUrl" class="text-decoration-none text-black fw-bolder mb-2"
                                style="font-size: 16px;"> @item.FirstLine </a>

                            <div class="row">
                                <div class="col-12 col-md-4 col-lg-4 col-xl-3">
                                    <p class="text-primary m-0 overflow-hidden" style="font-size: 14px;"> @item.LastLine </p>
                                </div>
                                <div class="col-12 col-md-4 col-lg-4 col-xl-3">
                                    <span class="text-primary" style="font-size: 14px;">@item.PageCount страниц</span>
                                </div>
                            </div>

                            <div class="row mb-2">
                                <div class="col-12 col-md-4 col-lg-4 col-xl-3">
                                    @for (var count = 0; count < 5; count++)
                                    {
                                        <span class="fa fa-star @((item.Rating < count + 1) ? "" : "checked-star")"></span>
                                    }
                                </div>
                                <div class="col-12 col-md-4 col-lg-4 col-xl-3">
                                    <span style="font-size: 14px;">Оценка: @($"{@item.Rating:F2}")</span>
                                </div>
                            </div>
                            <div class="d-none d-md-inline-block" style="max-height:80px; font-size:14px;">
                                <p class="w-100 text-wrap" style="overflow-wrap:anywhere;">@item.Description</p>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        }
        <div class="row mb-4 w-100">
            @{
                var pageCount = Math.Ceiling((double)this.Model.Catalog.AllCount / this.Model.pageOptions.MaxItemsOnPage);
            }
            <div class="col-12">
                <div class="pagination">
                    @{
                        await RenderPageActionLink("Назад", this.Model.CurrentPage <= 0, this.Model.CurrentPage - 1);
                    }
                    <div class="d-inline-flex p-0 pb-1" style="overflow-x: auto;">
                        @for (var index = 0; index < pageCount; index++)
                        {
                            await RenderPageActionLink((index + 1).ToString(), this.Model.CurrentPage == index, index);
                        }
                    </div>
                    @{
                        await RenderPageActionLink("Вперед", this.Model.CurrentPage >= pageCount - 1, this.Model.CurrentPage + 1);
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="col-12 col-lg-4 order-0 order-lg-1">
        <div class="row mb-4">
            <div class="col-12">
                @await this.Component.InvokeAsync(typeof(FilterViewComponent), new { viewModel = this.Model.FilterModel })
            </div>
        </div>

        <div class="row mb-4">

            <div class="col-12">
                <div class="bg-white custom-bg-white p-3">

                    <h2 class="fs-5 fw-bolder mb-4">Категории и жанры</h2>
                    <div class="row mb-4">
                        @{
                            var allCategoryData = new Dictionary<string, string?>() { { "CategoryGenre", null }, }; 
                        }
                        <div class="col-12">
                            <a class="btn btn-dark w-100" asp-page="/Index" asp-all-route-data="@allCategoryData">Все публикации</a>
                        </div>
                    </div>

                    <div class="d-block d-lg-none">

                        <button class="btn btn-outline-dark w-100 mb-3" type="button" data-bs-toggle="collapse" data-bs-target="#collapseCategory">
                            Отобразить список
                        </button>
                        <div class="collapse border border-1" id="collapseCategory">
                            @{
                                await RenderCategoryTreeview();
                            }
                        </div>
                    </div>
                    <div class="d-none d-lg-block border border-1">
                        @{
                            await RenderCategoryTreeview();
                        }
                    </div>

                </div>
            </div>

        </div>
    </div>

</div>